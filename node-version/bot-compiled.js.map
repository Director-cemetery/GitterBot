{"version":3,"sources":["bot.js"],"names":[],"mappings":"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","file":"bot-compiled.js","sourcesContent":["var Gitter = require('node-gitter'),\n    redis  = require(\"redis\"),\n    client = redis.createClient(),\n    shell  = require('shelljs'),\n    endsWithAny = require('ends-with-any'),\n    startsWithAny = require('starts-with-any'),\n    config = require('config'),\n    gitter = new Gitter(config.get(\"token\"));\n\n\nclient.on(\"error\", function (err) {\n    console.log(\"Error \" + err);\n});\nshell.cd('..');\n\n\nclass Message {\n    constructor(model) {\n        this.model = model;\n    }\n\n    isBot() {\n        return this.model.fromUser.id == config.get(\"botId\");\n    }\n\n    isThanks() {\n        var text = this.model.text;\n\n        text = text.replace(/@([0-9a-zA-Z\\- \\/_?:.,\\s]+) /g, function () {\n            return \"\";\n        }).trim().toLocaleLowerCase().replace(\n            /[.,-\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\"\n        );\n\n        return startsWithAny(text, config.get(\"thanksText\")) || endsWithAny(text, config.get(\"thanksText\"));\n    }\n\n    isThanksToNoOne() {\n        return !!(this.isThanks() && this.model.mentions.length <= 0);\n    }\n\n    isKarma() {\n        return this.model.text.toLowerCase() === \"карма\";\n    }\n\n    isSql() {\n        return this.model.text.trim().toLowerCase().indexOf('select') === 0;\n    }\n}\n\n\ngitter.currentUser().then(function (user) {\n    user.rooms().then(function (rooms) {\n        // console.log(rooms);\n    });\n    console.log('You are logged in as:', user.id);\n});\n\n\ngitter.rooms.find(config.get(\"roomId\")).then(function (room) {\n    var events = room.streaming().chatMessages();\n\n    events.on('chatMessages', function (message) {\n        if (message.operation == 'create') {\n            var messageObj = new Message(message.model);\n\n            if (messageObj.isBot()) {\n                return true;\n            }\n            if (messageObj.isThanksToNoOne()) {\n                room.send(MessagesBag.toWhomThanks(messageObj.model));\n                return true;\n            }\n            if (messageObj.isThanks()) {\n                App.processThanks(messageObj.model, room);\n                return true;\n            }\n            if (messageObj.isKarma()) {\n                App.processKarma(messageObj.model, room);\n                return true;\n            }\n            if (messageObj.isSql()) {\n                App.processSql(messageObj.model, room);\n                return true;\n            }\n        }\n    });\n});\n\n\nvar App = (function () {\n    var processThanks = function (message, room) {\n        var mentionedUsers = message.mentions;\n\n        mentionedUsers.forEach(function (user) {\n            if (message.fromUser.id == user.userId) {\n                room.send(MessagesBag.errorYourSelfThanks(message));\n                return false;\n            }\n\n            if (user.userId === undefined) {\n                room.send(MessagesBag.userNotExists(user));\n                return false;\n            }\n\n            var now = Date.now();\n\n            client.get(config.get(\"roomId\") + \"::\" + user.userId + \"::lastThanksTime\", function (err, lastThanksTime) {\n                if (lastThanksTime !== null && now - lastThanksTime <= config.get(\"karmaPerTime\")) {\n                    room.send(MessagesBag.errorTooManyToUser(user));\n                    return false;\n                }\n\n                client.get(config.get(\"roomId\") + \"::\" + message.fromUser.id + \"::\" + user.userId + \"::lastThanksTime\", function (err, lastThanksTimeFromUser) {\n                    if (lastThanksTimeFromUser !== null && now - lastThanksTimeFromUser <= config.get(\"karmaPerTimeFromUser\")) {\n                        room.send(MessagesBag.errorTooManyFromUserToUser(message, user));\n                        return false;\n                    }\n\n                    client.incr(config.get(\"roomId\") + \"::\" + user.userId + \"::karma\");\n                    client.incr(config.get(\"roomId\") + \"::\" + message.fromUser.id + \"::\" + user.userId + \"::karma\");\n                    client.set(config.get(\"roomId\") + \"::\" + user.userId + \"::lastThanksTime\", now);\n                    client.set(config.get(\"roomId\") + \"::\" + message.fromUser.id + \"::\" + user.userId + \"::lastThanksTime\", now);\n\n                    client.get(config.get(\"roomId\") + \"::\" + user.userId + \"::karma\", function (err, karma) {\n                        room.send(MessagesBag.successThanks(user, karma));\n                    });\n                });\n            });\n        });\n    };\n\n    var processKarma = function (message, room) {\n        var now = Date.now();\n\n        client.get(config.get(\"roomId\") + \"::\" + message.fromUser.id + \"::karma\", function (err, karma) {\n            client.get(config.get(\"roomId\") + \"::\" + message.fromUser.id + \"::karma::lastTime\", function (err, lastTime) {\n                if (lastTime !== null && now - lastTime <= config.get(\"karmaPeriod\")) {\n                    return false;\n                }\n\n                if (karma === null && lastTime !== null && now - lastTime <= config.get(\"karmaPeriod\")) {\n                    room.send(MessagesBag.noKarma(message));\n                    return false;\n                }\n\n                client.set(config.get(\"roomId\") + \"::\" + message.fromUser.id + \"::karma::lastTime\", now);\n\n                if (karma === null) {\n                    room.send(MessagesBag.noKarma(message));\n                    return false;\n                }\n\n                room.send(MessagesBag.karmaMessage(message, karma));\n            });\n        });\n    };\n\n    var processSql = function (message, room) {\n        var text = message.text.trim().replace(/\"/g, \"'\").replace(/\\\\/g, '').replace(/`/g, \"\");\n        var result = shell.exec(\"php artisan sql:build \\\"\" + text + \"\\\"\", {silent: true}).output;\n\n        room.send(\"```\\n\" + result + \"\\n```\");\n    };\n\n    return {\n        processThanks: processThanks,\n        processKarma: processKarma,\n        processSql: processSql\n    }\n})();\n\n\nvar MessagesBag = (function () {\n    var toWhomThanks = function (message) {\n        return \"@\" + message.fromUser.username + \" *Кому спасибо-то? Укажите своё спасибо в формате «спасибо @nickname».*\";\n    };\n\n    var errorYourSelfThanks = function (message) {\n        return \"@\" + message.fromUser.username + \" *Нельзя говорить спасибо самому себе!*\";\n    };\n\n    var errorTooManyToUser = function (user) {\n        return \"*Спасибо для пользователя @\" + user.screenName + \" не добавилось. Слишком частое спасибо!*\"\n    };\n\n    var errorTooManyFromUserToUser = function (message, user) {\n        return \"@\" + message.fromUser.username + \" *Вы слишком часто говорите пользователю @\" + user.screenName + \" спасибо. Слишком частое спасибо!*\"\n    };\n\n    var successThanks = function (user, karma) {\n        return \"*Спасибо принято. Текущая карма пользователя* @\" + user.screenName + \" **+\" + karma + \"**\";\n    };\n\n    var userNotExists = function (user) {\n        return \"*Пользователь @\" + user.screenName + \" не существует или не находится в комнате*\";\n    };\n\n    var karmaMessage = function (message, karma) {\n        return \"@\" + message.fromUser.username + \" *Ваша карма **+\" + karma + \"***\";\n    };\n\n    var noKarma = function (message) {\n        return \"@\" + message.fromUser.username + \" *Вас ещё никто не благодарил*\";\n    };\n\n    return {\n        toWhomThanks: toWhomThanks,\n        errorYourSelfThanks: errorYourSelfThanks,\n        errorTooManyToUser: errorTooManyToUser,\n        errorTooManyFromUserToUser: errorTooManyFromUserToUser,\n        successThanks: successThanks,\n        userNotExists: userNotExists,\n        karmaMessage: karmaMessage,\n        noKarma: noKarma\n    }\n})();"]}